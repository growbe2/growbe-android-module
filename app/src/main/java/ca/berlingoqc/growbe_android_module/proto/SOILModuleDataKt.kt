//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: module.proto

package ca.berlingoqc.growbe_android_module.proto;

@kotlin.jvm.JvmName("-initializesOILModuleData")
inline fun sOILModuleData(block: ca.berlingoqc.growbe_android_module.proto.SOILModuleDataKt.Dsl.() -> kotlin.Unit): ca.berlingoqc.growbe_android_module.proto.Module.SOILModuleData =
  ca.berlingoqc.growbe_android_module.proto.SOILModuleDataKt.Dsl._create(ca.berlingoqc.growbe_android_module.proto.Module.SOILModuleData.newBuilder()).apply { block() }._build()
object SOILModuleDataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: ca.berlingoqc.growbe_android_module.proto.Module.SOILModuleData.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ca.berlingoqc.growbe_android_module.proto.Module.SOILModuleData.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ca.berlingoqc.growbe_android_module.proto.Module.SOILModuleData = _builder.build()

    /**
     * <code>int32 p0 = 1;</code>
     */
    var p0: kotlin.Int
      @JvmName("getP0")
      get() = _builder.getP0()
      @JvmName("setP0")
      set(value) {
        _builder.setP0(value)
      }
    /**
     * <code>int32 p0 = 1;</code>
     */
    fun clearP0() {
      _builder.clearP0()
    }

    /**
     * <code>int32 p1 = 2;</code>
     */
    var p1: kotlin.Int
      @JvmName("getP1")
      get() = _builder.getP1()
      @JvmName("setP1")
      set(value) {
        _builder.setP1(value)
      }
    /**
     * <code>int32 p1 = 2;</code>
     */
    fun clearP1() {
      _builder.clearP1()
    }

    /**
     * <code>int32 p2 = 3;</code>
     */
    var p2: kotlin.Int
      @JvmName("getP2")
      get() = _builder.getP2()
      @JvmName("setP2")
      set(value) {
        _builder.setP2(value)
      }
    /**
     * <code>int32 p2 = 3;</code>
     */
    fun clearP2() {
      _builder.clearP2()
    }

    /**
     * <code>int32 p3 = 4;</code>
     */
    var p3: kotlin.Int
      @JvmName("getP3")
      get() = _builder.getP3()
      @JvmName("setP3")
      set(value) {
        _builder.setP3(value)
      }
    /**
     * <code>int32 p3 = 4;</code>
     */
    fun clearP3() {
      _builder.clearP3()
    }

    /**
     * <code>int32 p4 = 5;</code>
     */
    var p4: kotlin.Int
      @JvmName("getP4")
      get() = _builder.getP4()
      @JvmName("setP4")
      set(value) {
        _builder.setP4(value)
      }
    /**
     * <code>int32 p4 = 5;</code>
     */
    fun clearP4() {
      _builder.clearP4()
    }

    /**
     * <code>int32 p5 = 6;</code>
     */
    var p5: kotlin.Int
      @JvmName("getP5")
      get() = _builder.getP5()
      @JvmName("setP5")
      set(value) {
        _builder.setP5(value)
      }
    /**
     * <code>int32 p5 = 6;</code>
     */
    fun clearP5() {
      _builder.clearP5()
    }

    /**
     * <code>int32 p6 = 7;</code>
     */
    var p6: kotlin.Int
      @JvmName("getP6")
      get() = _builder.getP6()
      @JvmName("setP6")
      set(value) {
        _builder.setP6(value)
      }
    /**
     * <code>int32 p6 = 7;</code>
     */
    fun clearP6() {
      _builder.clearP6()
    }

    /**
     * <code>int32 p7 = 8;</code>
     */
    var p7: kotlin.Int
      @JvmName("getP7")
      get() = _builder.getP7()
      @JvmName("setP7")
      set(value) {
        _builder.setP7(value)
      }
    /**
     * <code>int32 p7 = 8;</code>
     */
    fun clearP7() {
      _builder.clearP7()
    }

    /**
     * <code>int32 timestamp = 9;</code>
     */
    var timestamp: kotlin.Int
      @JvmName("getTimestamp")
      get() = _builder.getTimestamp()
      @JvmName("setTimestamp")
      set(value) {
        _builder.setTimestamp(value)
      }
    /**
     * <code>int32 timestamp = 9;</code>
     */
    fun clearTimestamp() {
      _builder.clearTimestamp()
    }

    /**
     * <code>string valuetype = 10;</code>
     */
    var valuetype: kotlin.String
      @JvmName("getValuetype")
      get() = _builder.getValuetype()
      @JvmName("setValuetype")
      set(value) {
        _builder.setValuetype(value)
      }
    /**
     * <code>string valuetype = 10;</code>
     */
    fun clearValuetype() {
      _builder.clearValuetype()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun ca.berlingoqc.growbe_android_module.proto.Module.SOILModuleData.copy(block: ca.berlingoqc.growbe_android_module.proto.SOILModuleDataKt.Dsl.() -> kotlin.Unit): ca.berlingoqc.growbe_android_module.proto.Module.SOILModuleData =
  ca.berlingoqc.growbe_android_module.proto.SOILModuleDataKt.Dsl._create(this.toBuilder()).apply { block() }._build()

